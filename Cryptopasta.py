# The MIT License (MIT)
# –ê–≤—Ç–æ—Ä—Å–∫–∏–µ –ø—Ä–∞–≤–∞? –Ω–µ —Å–ª—ã—à–∞–ª

# –ü–∞—Å—Ç–µ—Ä –±–ª—è) : Fxrlxrn
# scope: hikka_only

from .. import loader, utils
import logging
import asyncio

# –í–µ—Ä—Å–∏—è –º–æ–¥—É–ª—è
__version__ = (1, 3, 2)
logger = logging.getLogger(__name__)

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –º–æ–¥—É–ª—è
@loader.tds
class CryptoStealMod(loader.Module):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫—Ä–∏–ø—Ç–æ–±–æ—Ç–æ–≤ (–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –¥—Ä—É–≥–∏—Ö –±–æ—Ç–æ–≤)."""

    # –°—Ç—Ä–æ–∫–∏ –¥–ª—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
  strings = {
        "name": "CryptoSteal",
        "disabled": "<emoji document_id=5260342697075416641>‚ùå</emoji> Disabled",
        "enabled": "<emoji document_id=5206607081334906820>‚úÖ</emoji> Enabled",
        "status_now": "<emoji document_id=5449687343931859785>ü§ë</emoji> Crypto-Steal was <b>{}</b>!",
        "config_status": "Are we ready to steal?",
        "config_delay": (
            "How long to wait before check activation? (in seconds) (needed to prevent"
            " moments when cryptobot didnt create the check yet)"
        ),
        "config_allow_other_bots": "If disabled i will only steal checks by Trusted Bots",
        "config_use_asset_chat": "If disabled the 'crypto-steal' chat will not be used",
        "config_trusted_bots": "Trusted Bots to steal from even if allow_other_bots is False (lowercase username)",
        "cant_create_asset_chat": "üò¢ The asset chat is not created, for some reason.",
        "asset_chat_got_check": (
            "‚òòÔ∏è Hopefully got a new check!\nüîó Here is the link to it: {u1}?start={u2} or <code>/start {u2}</code> in {u1}"
            '\n\n<a href="{link}">üîó Message</a>'
        ),
    }

    strings_ru = {
        "disabled": "<emoji document_id=5260342697075416641>‚ùå</emoji> –í—ã–∫–ª—é—á–µ–Ω",
        "enabled": "<emoji document_id=5206607081334906820>‚úÖ</emoji> –í–∫–ª—é—á—ë–Ω",
        "status_now": "<emoji document_id=5449687343931859785>ü§ë</emoji> Crypto-Steal —Ç–µ–ø–µ—Ä—å <b>{}</b>!",
        "config_status": "–ì–æ—Ç–æ–≤—ã –ª–∏ –º—ã —Ç—ã—Ä–∏—Ç—å?",
        "config_delay": "–°–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –∂–¥–∞—Ç—å –ø–µ—Ä–µ–¥ –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π —á–µ–∫–∞? (–Ω—É–∂–Ω–æ —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ —Ç–∞–∫–∏–º —Å–ª—É—á–∞–µ–≤ –∫–æ–≥–¥–∞ –∫—Ä–∏–ø—Ç–æ–±–æ—Ç –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–ª —á–µ–∫)",
        "config_allow_other_bots": "–ï—Å–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω–æ —Ç–æ —è –±—É–¥—É —Ç—ã—Ä–∏—Ç—å —Ç–æ–ª—å–∫–æ —á–µ–∫–∏ –î–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ë–æ—Ç–æ–≤",
        "config_use_asset_chat": "–ï—Å–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω–æ —Ç–æ —á–∞—Ç 'crypto-steal' –Ω–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω",
        "config_trusted_bots": "–î–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ë–æ—Ç—ã –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —è –±—É–¥—É —Ç—ã—Ä–∏—Ç—å –¥–∞–∂–µ –µ—Å–ª–∏ allow_other_bots –Ω–∞ False (–Ω–∏–∫ –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏)",
        "cant_create_asset_chat": "üò¢ –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —á–∞—Ç Crypto-Steal, –ø–æ—á–µ–º—É-—Ç–æ.",
        "asset_chat_got_check": (
            "‚òòÔ∏è –ù–∞–¥–µ—é—Å—å –ø–æ–ª—É—á–∏–ª –Ω–æ–≤—ã–π —á–µ–∫!\nüîó –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–µ–≥–æ: {u1}?start={u2} –∏–ª–∏ <code>/start {u2}</code> –≤ {u1}"
            '\n\n<a href="{link}">üîó –°–æ–æ–±—â–µ–Ω–∏–µ</a>'
        ),
    }
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥—É–ª—è
    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "status",
                True,
                lambda: self.strings("config_status"),
                validator=loader.validators.Boolean()
            ),
        )
        self.cached_entities = {}  # –ö—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—É—â–Ω–æ—Å—Ç–µ–π

    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
    async def client_ready(self):
        self.me = await self.client.get_me()

        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ asset —á–∞—Ç–∞
        self.asset_chat = await utils.asset_channel(
            self.client,
            "crypto-steal",
            "",
            avatar=r"https://img2.joyreactor.cc/pics/post/full/Zettai-Ryouiki-%D1%80%D0%B0%D0%B7%D0%BD%D0%BE%D0%B5-3527844.jpeg",
            silent=True,
            invite_bot=True,
        )

        if not self.asset_chat:
            await self.inline.bot.send_message(self._client.tg_id, self.strings("cant_create_asset_chat"))
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å asset —á–∞—Ç")

    # Watcher –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
    @loader.watcher(only_messages=True, only_inline=True)
    async def watcher(self, message):
        already_claimed: list = self.db.get(__name__, "already_claimed", [])

        if not self.config["status"]:
            return
        if not (("check for " in message.raw_text.lower()) or ("—á–µ–∫ –Ω–∞ " in message.raw_text.lower())):
            return

        url = message.buttons[0][0].url.split("?start=")

        if url[1] in already_claimed:
            logger.debug("–≠—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
            return

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫—ç—à–∞ –∏–ª–∏ –∑–∞–ø—Ä–æ—Å–æ–º, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç –≤ –∫—ç—à–µ
        user_id = url[0]
        if user_id in self.cached_entities:
            user = self.cached_entities[user_id]
        else:
            user = await self.client.get_entity(user_id)
            self.cached_entities[user_id] = user

        link = f"https://t.me/c/{str(message.chat_id).replace('-100', '')}/{message.id}"

        if (user.username.lower() not in self.config["trusted_bots"]) and (not self.config["allow_other_bots"]):
            logger.debug(f"–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ–Ω–∞–¥–µ–∂–Ω–æ–≥–æ –±–æ—Ç–∞ (@{user.username})")
            return

        # –û—Ç–º–µ—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ
        await message.mark_read()

        # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –≤ asset —á–∞—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
        await asyncio.gather(
            self.client.send_message(user.id, f"/start {url[1]}"),
            self.send_asset_chat_message(url, link)
        )

        already_claimed.append(url[1])
        self.db.set(__name__, "already_claimed", already_claimed)

    # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ asset —á–∞—Ç
    async def send_asset_chat_message(self, url, link):
        if self.asset_chat and self.config["use_asset_chat"]:
            await self.inline.bot.send_message(
                f"-100{self.asset_chat[0].id}",
                self.strings("asset_chat_got_check").format(u1=url[0], u2=url[1], link=link),
                disable_web_page_preview=True,
            )

    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç–∞
    async def cryptostealcmd(self, message):
        """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å Crypto-Steal"""

        self.config["status"] = not self.config["status"]

        await utils.answer(
            message,
            self.strings("status_now").format(
                self.strings("enabled") if self.config["status"] else self.strings("disabled")
            ),
        )
